server {
    listen 80;
    listen [::]:80;
    server_name inspectrum.clinic;

    root /var/www/app/public;
    set $yii_bootstrap "index.php";

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    charset utf-8;

    client_max_body_size 128M;


    location / {
        index  index.html $yii_bootstrap;
        try_files $uri $uri/ /$yii_bootstrap?$args;
        add_header 'Access-Control-Allow-Orimcgin' *;
    }

    location ~ ^/(protected|framework|themes/\w+/views) {
        deny all;
    }

    #avoid processing of calls to unexisting static files by yii
    location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
        try_files $uri =404;
    }

    location ~ \.php {
        fastcgi_split_path_info ^(.+\.php)(.*)$;

        #let yii catch the calls to unexising PHP files
        set $fsn /$yii_bootstrap;
        if (-f $document_root$fastcgi_script_name) {
            set $fsn $fastcgi_script_name;
        }

        fastcgi_pass php:9000;
        include fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME $document_root$fsn;
        fastcgi_read_timeout 1200;

        #PATH_INFO and PATH_TRANSLATED can be omitted, but RFC 3875 specifies them for CGI
        fastcgi_param  PATH_INFO       $fastcgi_path_info;
        fastcgi_param  PATH_TRANSLATED $document_root$fsn;
    }

    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
server {
    listen 8080;
    listen [::]:8080;
    server_name inspectrum.clinic;

    access_log /var/log/nginx/phpmyadmin.access.log;
    error_log  /var/log/nginx/phpmyadmin.error.log;

#     charset utf-8;

#     client_max_body_size 128M;

    #PROXY-START
    location /
    {
        proxy_pass http://phpmyadmin:80;
        proxy_set_header Host      $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header REMOTE-HOST $remote_addr;

        #Проксирование WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        #Persistent connection related configuration
        add_header X-Cache $upstream_cache_status;

        #Set Nginx Cache
        set $static_fileaiIHDWqF 0;
        if ( $uri ~* "\.(gif|png|jpg|css|js|woff|woff2)$" )
        {
            set $static_fileaiIHDWqF 1;
            expires 1m;
        }
        if ( $static_fileaiIHDWqF = 0 )
        {
            add_header Cache-Control no-cache;
        }
    }
    #PROXY-END
}